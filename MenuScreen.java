import javax.swing.*; 
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MenuScreen extends JPanel {
    //JPanel l√† m·ªôt th√†nh ph·∫ßn giao di·ªán (GUI component) d√πng ƒë·ªÉ ch·ª©a c√°c n√∫t, ·∫£nh, ho·∫∑c c√°c th√†nh ph·∫ßn kh√°c.
    private JFrame frame;
    private Image bgStart;


    public MenuScreen(JFrame frame) {
        this.frame = frame;
        this.setPreferredSize(new Dimension(360, 640));

        // T·∫£i ·∫£nh n·ªÅn
        bgStart = new ImageIcon(getClass().getResource("/picture/bgStart.png")).getImage();

        // T·∫°o n√∫t "Ch∆°i Game"
        ImageIcon play = new ImageIcon(new ImageIcon(getClass().getResource("/picture/buttonPlay.png"))
                                    .getImage().getScaledInstance(180, 60, Image.SCALE_SMOOTH));
        JButton playButton = new JButton(play);
        playButton.setFont(new Font("Arial", Font.BOLD, 20));
        playButton.setFocusPainted(false); //T·∫Øt hi·ªáu ·ª©ng vi·ªÅn n√©t ƒë·ª©t (focus border) khi n√∫t ƒë∆∞·ª£c ch·ªçn ho·∫∑c tab ƒë·∫øn.
        playButton.setBounds(90, 200, 180, 60);
        playButton.setContentAreaFilled(false); //Kh√¥ng v·∫Ω n·ªÅn (background) m·∫∑c ƒë·ªãnh c·ªßa n√∫t.
        playButton.setBorderPainted(false); //T·∫Øt v·∫Ω vi·ªÅn (border) quanh n√∫t.
        playButton.setOpaque(false); //Cho ph√©p ph·∫ßn n·ªÅn ph√≠a sau (background) hi·ªÉn th·ªã xuy√™n qua n√∫t.
        playButton.setCursor(new Cursor(Cursor.HAND_CURSOR)); //Khi ng∆∞·ªùi d√πng ƒë∆∞a chu·ªôt l√™n n√∫t, con tr·ªè chuy·ªÉn th√†nh h√¨nh b√†n tay ü§ö.

        // T·∫°o n√∫t "Store Bird"
        ImageIcon store = new ImageIcon(new ImageIcon(getClass().getResource("/picture/buttonStore.png"))
                                    .getImage().getScaledInstance(180, 60, Image.SCALE_SMOOTH));
        JButton btstore = new JButton(store);
        btstore.setFont(new Font("Arial", Font.BOLD, 20));
        btstore.setFocusPainted(false);
        btstore.setBounds(90, 275, 180, 60);
        btstore.setContentAreaFilled(false);
        btstore.setBorderPainted(false);
        btstore.setOpaque(false);
        btstore.setCursor(new Cursor(Cursor.HAND_CURSOR));

        // T·∫°o n√∫t "C√†i ƒë·∫∑t"
        ImageIcon setting = new ImageIcon(new ImageIcon(getClass().getResource("/picture/buttonSetting.png"))
                                    .getImage().getScaledInstance(180, 60, Image.SCALE_SMOOTH));
        JButton btsetting = new JButton(setting);
        btsetting.setFont(new Font("Arial", Font.BOLD, 20));
        btsetting.setFocusPainted(false);
        btsetting.setBounds(90, 350, 180, 60);
        btsetting.setContentAreaFilled(false);
        btsetting.setBorderPainted(false);
        btsetting.setOpaque(false);
        btsetting.setCursor(new Cursor(Cursor.HAND_CURSOR));

        // T·∫°o n√∫t "Th√¥ng Tin"
        ImageIcon about = new ImageIcon(new ImageIcon(getClass().getResource("/picture/buttonAbout.png"))
                                    .getImage().getScaledInstance(180, 60, Image.SCALE_SMOOTH));
        JButton btabout = new JButton(about);
        btabout.setFont(new Font("Arial", Font.BOLD, 20));
        btabout.setFocusPainted(false);
        btabout.setBounds(90, 425, 180, 60);
        btabout.setContentAreaFilled(false);
        btabout.setBorderPainted(false);
        btabout.setOpaque(false);
        btabout.setCursor(new Cursor(Cursor.HAND_CURSOR));

        playButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                startGame();
            }
        });

        btstore.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                openStore();
            }
        });

        btsetting.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                openSetting();
            }
        });

        btabout.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                openInformation();
            }
        });

        setLayout(null); //t·ª± ki·ªÉm so√°t v·ªã tr√≠ v√† k√≠ch th∆∞·ªõc t·ª´ng th√†nh ph·∫ßn
        add(playButton);
        add(btstore);
        add(btsetting);
        add(btabout);
    }

    private void startGame() {
        frame.getContentPane().removeAll();
        FlappyBird game = new FlappyBird();
        frame.add(game);
        frame.pack(); //s·ª≠ d·ª•ng pack() ƒë·ªÉ JFrame t·ª± ƒë·ªông ƒëi·ªÅu ch·ªânh k√≠ch th∆∞·ªõc theo c√°c th√†nh ph·∫ßn b√™n trong.
        game.requestFocus(); //Y√™u c·∫ßu FlappyBird nh·∫≠n focus b√†n ph√≠m, ƒë·ªÉ ng∆∞·ªùi d√πng c√≥ th·ªÉ ƒëi·ªÅu khi·ªÉn game b·∫±ng ph√≠m
        frame.revalidate(); //Y√™u c·∫ßu Swing c·∫≠p nh·∫≠t l·∫°i layout c·ªßa JFrame sau khi c√≥ thay ƒë·ªïi (th√™m ho·∫∑c x√≥a th√†nh ph·∫ßn).
        frame.repaint(); //Y√™u c·∫ßu v·∫Ω l·∫°i to√†n b·ªô giao di·ªán (repaint() t·∫•t c·∫£ th√†nh ph·∫ßn trong frame).
    }

    private void openStore() {
        frame.getContentPane().removeAll();
        StoreBird storeBird = new StoreBird(frame);
        frame.add(storeBird);
        frame.pack();
        frame.revalidate();
        frame.repaint();
    }

    private void openSetting() {
        frame.getContentPane().removeAll();
        Setting setting = new Setting(frame);
        frame.add(setting);
        frame.pack();
        frame.revalidate();
        frame.repaint();
    }

    private void openInformation() {
        frame.getContentPane().removeAll();
        Information information = new Information(frame);
        frame.add(information);
        frame.pack();
        frame.revalidate();
        frame.repaint();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.drawImage(bgStart, 0, 0, getWidth(), getHeight(), this);
    }
}
